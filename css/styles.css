@charset "UTF-8";
/* Partie header */
.header {
  width: 100%;
  height: 10vh;
  background-color: purple;
}

.central-section {
  width: 80%;
  height: auto;
  margin: 30px;
  padding: auto;
  background-color: grey;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}
.central-section .element {
  background-color: gold;
  width: 200px;
  height: 200px;
  margin: 12px;
  padding: auto;
  font-size: 5rem;
}
.central-section .element:hover {
  box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);
  border: solid black 2px;
  transform: scale(1.3);
}

/* Menu latéral lorsque large écran, mis en fouter horizontal lorsque 
l'écran est petit */
.aside {
  width: 220px;
  background-color: #eb9999;
}
.aside .menu-entry {
  width: 100%;
  height: 200px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.aside .menu-entry:hover {
  box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);
  border: solid black 2px;
  transform: scale(0.78);
}

@media screen and (max-width: 768px) {
  .aside {
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    width: 100%;
    height: 10vh;
  }

  .menu-entry {
    height: 10vh;
  }
}
/* Le conteneur aussi du menu latéral que du contenu à proprement de notre page */
.main-container {
  width: 100%;
  display: flex;
}

/* Attention, si l'on met la média query avant les autres styles,
alors les autres styles viendront écraser ce que spécifie la média 
query même dans le cas d'une taille d'écran petite!!!     */
@media screen and (max-width: 768px) {
  .main-container {
    flex-direction: column-reverse;
  }
}
/* Panneau central, conteneur des "sections" de contenu principal */
.central-panel {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Pour écraser les margin et padding qui sont mis par défaut
par les navigateurs. Le souci est que ce ne sont pas les mêmes
mises par défaut par différentes versions */
* {
  padding: 0;
  margin: 0;
}

.entry-3 h4, .entry-2 h4, .entry-1 h4 {
  font-size: 2rem;
}
.entry-3 h4::before, .entry-2 h4::before, .entry-1 h4::before {
  content: "> ";
}

/* Dans le corps de la boucle, on mettra ce que l'on veut voir être répété
 (dans le CSS généré) */
/* Attention à ne jamais oublier de mettre en place ce qui va causer la terminaison
  de la boucle (ie: faire en sorte qu'un jour la condition de terminaison
  s'évalue à false) */
.entry-1 {
  background-color: #15bce4;
}
.entry-2 {
  background-color: #b957d3;
}
.entry-3 {
  background-color: #2a43e2;
}

/*# sourceMappingURL=styles.css.map */
